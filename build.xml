<?xml version="1.0" encoding="UTF-8"?>
 <project name="zikula" default="clean">
    <!-- invokation
        phing -f $WORKSPACE/source/build.xml clean prepare phpcs phpcpd phpunit phpcb build build_delete -Dworkspace=$WORKSPACE -Djob_name=$JOB_NAME -Dbuild_number=$BUILD_NUMBER -Dbuild_tag=$BUILD_TAG -Dbuild_id=$BUILD_ID -Dsvn_revision=$SVN_REVISION
        # note phpcb must be the last artifact run in the chain 
    -->
    <!--
        BUILD_NUMBER - The current build number, such as "153"
        BUILD_ID - The current build id, (YYYY-MM-DD_hh-mm-ss)
        JOB_NAME - Name of the project of this build, such as "foo"
        BUILD_TAG - String of "hudson-${JOBNAME}-${BUILD_NUMBER}". 
        WORKSPACE - The absolute path of the workspace.
        SVN_REVISION - The revision this build is based on.
    -->
    <property name="builddir" value="${workspace}/build" />
    <property name="sourcedir" value="${workspace}/source" />
    <property name="package" value="${job_name}.build${build_number}" />
    <property name="exportdir" value="${builddir}/export" />
    <property name="archivedir" value="${builddir}/archive" />
    <property name="packagepath" value="${exportdir}/${job_name}" />
    <property name="checksumpath" value="${archivedir}/${package}-checksums" />
    <property name="patchdir" value="${builddir}/patch" />
    <property name="tmpdir" value="${builddir}/tmp" />

    <target name="clean">
        <echo msg="Clean..." />
        <delete dir="${builddir}" includeemptydirs="true" />
    </target>

    <target name="prepare">
        <echo msg="Prepare..." />
        <mkdir dir="${builddir}" />
        <mkdir dir="${builddir}/logs" />
        <mkdir dir="${builddir}/logs/coverage" />
        <mkdir dir="${builddir}/docs" />
        <mkdir dir="${builddir}/phpcb" />
        <mkdir dir="${builddir}/archive" />
        <mkdir dir="${builddir}/export" />
    </target>

    <!-- Build archives -->
    <target name="build" depends="prepare">
        <echo msg="Exporting for build..." />
        <!-- ATTN export urls require manual edit -->
        <exec command="svn export -r${svn_revision} https://code.zikula.org/svn/core/branches/zikula-1.3/src ${packagepath}" />
        <exec command="svn export --force https://code.zikula.org/svn/tour/trunk/src/Tour ${packagepath}/modules/Tour" />

        <echo msg="Prepare permissions..." />
        <chmod file="${packagepath}/config/config.php" mode="0666" />
        <chmod file="${packagepath}/ztemp/error_logs" mode="0777" />
        <chmod file="${packagepath}/ztemp/Renderer_cache" mode="0777" />
        <chmod file="${packagepath}/ztemp/Renderer_compiled" mode="0777" />
        <chmod file="${packagepath}/ztemp/Theme_cache" mode="0777" />
        <chmod file="${packagepath}/ztemp/Theme_compiled" mode="0777" />
        <chmod file="${packagepath}/ztemp/Theme_Config" mode="0777" />

        <echo msg="Creating archive..." />
        <!-- zip's don't play nicely in Phing - using direct command -->
        <exec escape="false" command="cd ${exportdir}; zip -D -r ${archivedir}/${package}.zip ." />

        <tar destfile="${archivedir}/${package}.tar.gz" compression="gzip">
            <fileset dir="${exportdir}">
                <include name="${job_name}" />
            </fileset>
        </tar>
        <echo msg="Files copied and compressed in build directory OK!" />
        
        <!-- ATTN phingcall target="build_patch" / -->
        <phingcall target="build_checksums" />
    </target>
    
    <target name="build_delete">
        <!-- clean up export dir, this is not needed (unless we are debugging) -->
        <delete dir="${packagepath}" includeemptydirs="true" />
    </target>
    
    <target name="build_checksums">
        <echo msg="Creating MD5 and SHA1 checksums..." />
        <exec escape="false" command="echo -----------------md5sums----------------- > ${checksumpath}.tmp" />
        <exec escape="false" command="md5sum ${archivedir}/*.tar.gz ${archivedir}/*.zip >> ${checksumpath}.tmp" />
        
        <exec escape="false" command="echo -----------------sha1sums----------------- >> ${checksumpath}.tmp" />
        <exec escape="false" command="sha1sum ${archivedir}/*.tar.gz ${archivedir}/*.zip >> ${checksumpath}.tmp" />
                
        <exec escape="false" command="cat ${checksumpath}.tmp | sed 's!${archivedir}/!!g' > ${checksumpath}.txt" />
        <delete file="${checksumpath}.tmp" />
    </target>
    
    <target name="build_patch">
        <echo msg="Making patches...." />
        <!-- get diffs for releases and save in ${tmpdir}/CHANGES file -->
        <!-- ATTN urls require manual edit -->
        <exec escape="false" command="svn diff https://code.zikula.org/svn/core/tags/Zikula-1.3.0  https://code.zikula.org/svn/core/branches/zikula-1.3/src@${svn_revision} --summarize | sort|uniq > ${tmpdir}/CHANGES" />
        
        <!-- Remove lines that start with space (which means only a property change), or contain paths to deleted files -->
        <exec escape="false" command="cat ${tmpdir}/CHANGES | sed -e '/^[ D]/d' >${tmpdir}/AM" />
        
        <!-- List deleted files -->
        <exec escape="false" command="cat ${tmpdir}/CHANGES |  grep -e '^D' >${tmpdir}/DELETED.tmp" />
        
        <!-- this needs to be the regex escaped of the OLD branch -->
        <!-- ATTN url requires manual edit -->
        <property name="patchregex" value="https://code.zikula.org/svn/core/tags/Zikula-1.3.0/" />
        
        <!-- A or M, ignoring svn-property changes (2nd char), strip the svn-path from the remaining lines, store in ${tmpdir}/FILES -->
        <exec escape="false" command="cat ${tmpdir}/AM | sed -e 's!^[AM]. *${patchregex}!!g'  > ${tmpdir}/FILES" />
        <exec escape="false" command="cat ${tmpdir}/DELETED.tmp | sed -e 's!${patchregex}!!g'  > ${tmpdir}/DELETED" />
        
        <!-- assemble patch -->
        <exec escape="false" command="cd ${packagepath};for FILE in `cat ${tmpdir}/FILES`;do cp --parents $FILE ${patchdir};done" />
        
        <!-- zip's don't play nicely in Phing - using direct command -->
        <exec escape="false" command="cd ${patchdir}; zip -D -r ${archivedir}/${package}.patch.zip ." />
    </target>

    <!-- PHP API Documentation -->
    <target name="phpdoc">
        <echo msg="PHP Documentor..." />
        <phpdoc title="API Documentation"
                destdir="${builddir}/docs"
                sourcecode="yes"
                defaultpackagename="MHTest"
                output="HTML:Smarty:PHP">
            <fileset dir="./src">
                <include name="**/*.php" />
            </fileset>
        </phpdoc>
    </target>

    <!-- PHP copy/paste analysis -->
    <target name="phpcpd">
        <echo msg="PHP Copy/Paste..." />
        <exec command="phpcpd --log-pmd=${builddir}/logs/phpcpd.xml ${sourcedir}/src" escape="false" />
    </target>

    <!-- PHP dependency checker -->
    <target name="pdepend">
        <echo msg="PHP Depend..." />
        <exec command="pdepend --jdepend-xml=${builddir}/logs/jdepend.xml --ignore=lib/vendor/Doctrine,lib/vendor/dwoo --optimization=best --suffix=php ${sourcedir}/src" escape="false" />
    </target>

    <!-- PHP CodeSniffer -->
    <target name="phpcs">
        <echo msg="PHP CodeSniffer..." />
        <exec command="phpcs --report=checkstyle --standard=Zikula --ignore=lib/vendor/*,javascript/*,system/SecurityCenter/pnincludes/*,system/Mailer/pnincludes/*,*.css,*.js ${sourcedir}/src > ${builddir}/logs/phpcs.xml" escape="false" />
    </target>

    <!-- Unit Tests & coverage analysis -->
    <target name="phpunit">
        <echo msg="PHP Unit..." />
        <exec command="phpunit --log-junit ${builddir}/logs/phpunit.xml --coverage-clover ${builddir}/logs/coverage/clover.xml --coverage-html ${builddir}/logs/coverage/ ${sourcedir}/tests"/>
    </target>

    <!-- Code Browser -->
    <target name="phpcb">
        <exec command="phpcb --log ${builddir}/logs --source ${sourcedir}/src --output ${builddir}/phpcb" />
    </target>
</project>
